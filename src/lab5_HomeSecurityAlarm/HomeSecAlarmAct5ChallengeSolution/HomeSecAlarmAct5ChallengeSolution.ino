#include "arduino_secrets.h"
/*
  Sketch generated by the Arduino IoT Cloud Thing "EIoTK_Activity_05"
  https://create.arduino.cc/cloud/things/c32e4fe4-1356-4837-84d5-c20909211d99
 
  Arduino IoT Cloud Properties description
 
  The following variables are automatically generated and updated when changes are made to the Thing properties
 
  String message;
  bool alarm;
 
  Properties which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/
 
#include "thingProperties.h"
#include <Arduino_MKRIoTCarrier.h>
MKRIoTCarrier carrier;
 
int pir = A5;
bool pirState = LOW;
 
//Colors
uint32_t colorRed = carrier.leds.Color(0, 255, 0);   //RED
uint32_t colorGreen = carrier.leds.Color(255, 0, 0);  //GREEN
 
uint32_t colorOff = carrier.leds.Color(0, 0, 0);  //OFF
uint32_t colorPurple = carrier.leds.Color(0, 255, 255);  //PURPLE
 
void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
 
  pinMode(pir, INPUT);
 
    // Defined in thingProperties.h
  initProperties();
  
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  CARRIER_CASE = true;
  carrier.begin();
  
  setDebugMessageLevel(4);   //Get Cloud Info/errors , 0 (only errors) up to 4
  ArduinoCloud.printDebugInfo();
  
  while (ArduinoCloud.connected() != 1) {
    ArduinoCloud.update();
    carrier.display.setTextSize(3);
    carrier.display.setCursor(20, 70);
    carrier.display.println("Waiting For");
    carrier.display.setCursor(5, 110);
    carrier.display.println("Connection...");
    delay(500);
  }
}
 
void loop() {
  ArduinoCloud.update();
  // Your code here
 
  //reading the status of the PIR sensor
  pirState = digitalRead(pir);
 
  //When motion is detected
  if (pirState == HIGH) {
    alarm = true;
  }
    
  //Dashboard check
  //when the alarm has not been triggered and it is off
  if (alarm == false) {
    carrier.display.fillScreen(ST77XX_BLACK);
    carrier.display.setCursor(30, 100);
    carrier.display.setTextSize(3);
    message = "Everything is good!";
    carrier.leds.fill((colorGreen), 0, 5);
    carrier.display.println(message);
    carrier.leds.show();
  }
  
  //When the alarm has been triggered and it is on
  //The alarm will be on until the user goes to cloud's dashboard to turn it off
  else {
    message = "Warning! We have detected a person";
    carrier.leds.fill((colorRed), 0, 5);
    carrier.display.fillScreen(ST77XX_BLACK);
    carrier.display.setCursor(30, 100);
    carrier.display.setTextSize(3);
    carrier.display.println(message);
    carrier.leds.show();
    carrier.Buzzer.sound(500);
    delay(500);
 
    carrier.leds.fill((colorOff), 0, 5);
    carrier.leds.show();
    carrier.Buzzer.noSound();
    delay(500);
 
    carrier.leds.fill((colorPurple), 0, 5);
    carrier.leds.show();
    carrier.Buzzer.sound(500);
    delay(500);
 
    carrier.leds.fill((colorOff), 0, 5);
    carrier.leds.show();
    carrier.Buzzer.noSound();
    delay(500);
 
  }
  Serial.println(message);
 
  delay(1000);
}
 
 
void onAlarmChange() {
  // Do something
}