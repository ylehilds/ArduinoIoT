/*
  Sketch generated by the Arduino IoT Cloud Thing "Explore Cloud vs Carrier game"
  https://create.arduino.cc/cloud/things/fdfaf2e7-a6e5-4450-bb4d-3510118c6fc1
 
  Arduino IoT Cloud Variables description
 
  The following variables are automatically generated and updated when changes are made to the Thing
 
  int boardPlay;
  int cloudPlay;
  bool cloudGuess_confirm;
  String results;
  bool boardReady;
  int boardGuess;
  bool cloudPlay_confirm;
  bool cloudReady;
  int cloudGuess;
 
  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/
 
#include "thingProperties.h"
#include "Screens.h"
 
void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
 
  // Defined in thingProperties.h
  initProperties();
 
  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection, "mqtts-sa.iot.oniudra.cc");
 
  CARRIER_CASE = true;
  carrier.begin();
 
  setDebugMessageLevel(4);
  ArduinoCloud.printDebugInfo();
 
  //Wait to get cloud connection to init the carrier
  while (ArduinoCloud.connected() != 1) {
    ArduinoCloud.update();
    carrier.display.setTextSize(3);
    carrier.display.setCursor(20, 70);
    carrier.display.println("Waiting For");
    carrier.display.setCursor(5, 110);
    carrier.display.println("Connection...");
    delay(500);
  }
 
  resetValues();
}
 
void loop()
{
  ArduinoCloud.update();
 
  carrier.Buttons.update();
 
  switch (screen)
  {
    //Main screen will be displayed until button02 is touched
    case 0: //Main screen
      if (screen_flag == true)
      {
        mainScreen(); //display main screen
        screen_flag = false; //switch screen_flag to false when a screen is displayed //switch screen_flag to false when a screen is displayed
      }
      else
      {
        if (carrier.Buttons.onTouchDown(TOUCH2))
        {
          screen = 1; //proceed to the next screen if button 02 is pressed 
          screen_flag = true;
        }
      }
      break;
 
    //Player1 (playing on the board) Guessing number screen
    case 1:
      if (screen_flag == true)
      {
        guessScreen(); //display guess screen
        screen_flag = false; //switch screen_flag to false when a screen is displayed
      }
      else
      {
        if (carrier.Buttons.onTouchDown(TOUCH0) && boardGuess < 10)
        {
          boardGuess += 1;
          numberUpdate(boardGuess);
        }
 
        else if (carrier.Buttons.onTouchDown(TOUCH4) && boardGuess > 0)
        {
          boardGuess -= 1;
          numberUpdate(boardGuess);
        }
        else if (carrier.Buttons.onTouchDown(TOUCH2))
        {
          boardGuess_Ready = true;
          screen = 2;
          screen_flag = true;
        }
      }
      break;
 
    //Player1 (playing on the board) picking the playing number screen
    case 2:
      if (screen_flag == true)
      {
        beansScreen();
        screen_flag = false; //switch screen_flag to false when a screen is displayed
      }
      else
      {
        if (carrier.Buttons.onTouchDown(TOUCH0) && boardProv < 5 )
        {
          boardProv += 1;
          numberUpdate(boardProv);
        }
        else if (carrier.Buttons.onTouchDown(TOUCH4) && boardProv > 0)
        {
          boardProv -= 1;
          numberUpdate(boardProv);
        }
        else if (carrier.Buttons.onTouchDown(TOUCH1) || carrier.Buttons.onTouchDown(TOUCH3))
        {
          screen = 1;
          screen_flag = true;
          boardGuess_Ready = false;
        }
        else if (carrier.Buttons.onTouchDown(TOUCH2))
        {
          boardBeans_Ready = true;
          screen = 3;
          screen_flag = true;
        }
      }
      break;
 
    case 3:
      if (cloudGuess_confirm == true && cloudBeans_confirm == true)
      {
        screen = 4;
        screen_flag = true;
        
      }else{
        if (screen_flag == true){
          carrier.display.fillScreen(ST77XX_BLACK);
          carrier.display.setTextColor(ST77XX_BLUE);
          carrier.display.setTextSize(3);
          carrier.display.setCursor(20, 60); 
          carrier.display.println("Waiting For");
          carrier.display.setCursor(20, 100); 
          carrier.display.println("Cloud Player");   
          screen_flag = false; //switch screen_flag to false when a screen is displayed
        }
      }
      break;
 
    case 4:
    
      boardBeans = boardProv;
      ArduinoCloud.update();
      resultsScreen();
      delay(5000);
      
      num = boardBeans + cloudBeans;
      
      if (num < boardGuess && num < cloudGuess)
      {
        results = "The result is a TIE";
        Serial.println(results);
        tieScreen();
        delay(5000);
      }
 
      else if (num >= boardGuess && num < cloudGuess)
      {
        results = "Board player wins";
        Serial.println(results);
        p1_winnerScreen();
        delay(5000);
      }
 
      else if (num < boardGuess && num >= cloudGuess)
      {
        results = "Cloud player wins";
        Serial.println(results);
        p2_winnerScreen();
        delay(5000);
      }
 
      else if (num >= boardGuess && num >= cloudGuess)
      {
        if (boardGuess > cloudGuess)
        {
          results = "Board player wins";
          Serial.println(results);
          p1_winnerScreen();
          delay(5000);
        }
        else if (boardGuess < cloudGuess)
        {
          results = "Cloud player wins";
          Serial.println(results);
          p2_winnerScreen();
          delay(5000);
        }
        else
        {
          results = "The result is a TIE";
          Serial.println(results);
          tieScreen();
          delay(5000);
        }
      }
      resetValues();
      break;
  }
}
 
 
void onCloudBeansConfirmChange() {
  if (screen == 1 || screen == 2)
  {
    if ( cloudBeans_confirm == false)
    {
      carrier.display.fillCircle(215, 17, 15, ST77XX_BLACK);
      carrier.display.drawCircle(215, 17, 15, ST77XX_GREEN);
    }
    else
    {
      carrier.display.fillCircle(215, 17, 15, ST77XX_GREEN);
    }
  }
}
 
void onCloudGuessConfirmChange() {
  if (screen == 1 || screen == 2)
  {
    if ( cloudGuess_confirm == false )
    {
      carrier.display.fillRect(78, 0, 40, 40, ST77XX_BLACK);
      carrier.display.drawCircle(95, 17, 15, ST77XX_GREEN);
    }
    else
    {
      carrier.display.fillRect(78, 0, 40, 40, ST77XX_BLACK);
      carrier.display.setTextSize(3);
      carrier.display.setCursor(83, 8);
      carrier.display.print(cloudGuess);
    }
  }
}
 
void onCloudBeansChange() {
  // Do something
}
 
void onCloudGuessChange() {
  // Do something
}
 